{"remainingRequest":"/Users/inessa/Documents/GitHub/user-docs-cloudlinux/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/inessa/Documents/GitHub/user-docs-cloudlinux/node_modules/vuepress-theme-cloudlinux/mixins/RedirectMixin.js","dependencies":[{"path":"/Users/inessa/Documents/GitHub/user-docs-cloudlinux/node_modules/vuepress-theme-cloudlinux/mixins/RedirectMixin.js","mtime":1608617753000},{"path":"/Users/inessa/Documents/GitHub/user-docs-cloudlinux/node_modules/cache-loader/dist/cjs.js","mtime":1574933633360},{"path":"/Users/inessa/Documents/GitHub/user-docs-cloudlinux/node_modules/babel-loader/lib/index.js","mtime":1588951745892}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9pbmVzc2EvRG9jdW1lbnRzL0dpdEh1Yi91c2VyLWRvY3MtY2xvdWRsaW51eC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmV4cG9ydCBkZWZhdWx0IHsKICBtZXRob2RzOiB7CiAgICBjaGVja1JlZGlyZWN0OiBmdW5jdGlvbiBjaGVja1JlZGlyZWN0KCkgewogICAgICBpZiAodGhpcy5uZXdVcmwpIHsKICAgICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZSh0aGlzLm5ld1VybCk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICByZWRpcmVjdGlvbk1hcHBpbmc6IGZ1bmN0aW9uIHJlZGlyZWN0aW9uTWFwcGluZygpIHsKICAgICAgLy8gYWRkIGRlZmF1bHQgcm91dGUKICAgICAgdmFyIG1hcCA9IF9vYmplY3RTcHJlYWQoe30sIHRoaXMuJHNpdGUudGhlbWVDb25maWcucmVkaXJlY3Rpb25NYXBwaW5nKTsKCiAgICAgIG1hcFsnLyddID0gdGhpcy4kc2l0ZS50aGVtZUNvbmZpZy5kZWZhdWx0VVJMOwogICAgICByZXR1cm4gbWFwOwogICAgfSwKICAgIHBhdGg6IGZ1bmN0aW9uIHBhdGgoKSB7CiAgICAgIHZhciBwYXRoID0gdGhpcy4kcm91dGUuZnVsbFBhdGg7CiAgICAgIHZhciBpc0V4aXN0aW5nUGF0aCA9ICEhdGhpcy5yZWRpcmVjdGlvbk1hcHBpbmdbcGF0aF07CgogICAgICBpZiAoIWlzRXhpc3RpbmdQYXRoICYmIHBhdGguc3Vic3RyKDAsIDIpID09PSAnLz8nKSB7CiAgICAgICAgcGF0aCA9IFtwYXRoLnNsaWNlKDAsIDEpLCAnaW5kZXguaHRtbCcsIHBhdGguc2xpY2UoMSldLmpvaW4oJycpOyAvLyBpbnNlcnQgaW5kZXguaHRtbCBpbnRvIHBhdGgKICAgICAgfQoKICAgICAgcmV0dXJuIHBhdGg7CiAgICB9LAogICAgbmV3VXJsOiBmdW5jdGlvbiBuZXdVcmwoKSB7CiAgICAgIHJldHVybiB0aGlzLnJlZGlyZWN0aW9uTWFwcGluZ1t0aGlzLnBhdGhdOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/inessa/Documents/GitHub/user-docs-cloudlinux/node_modules/vuepress-theme-cloudlinux/mixins/RedirectMixin.js"],"names":["methods","checkRedirect","newUrl","$router","replace","computed","redirectionMapping","map","$site","themeConfig","defaultURL","path","$route","fullPath","isExistingPath","substr","slice","join"],"mappings":";;;;;AAAA,eAAe;AACXA,EAAAA,OAAO,EAAE;AACLC,IAAAA,aADK,2BACW;AACZ,UAAI,KAAKC,MAAT,EAAiB;AACb,aAAKC,OAAL,CAAaC,OAAb,CAAqB,KAAKF,MAA1B;AAEA,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH;AATI,GADE;AAYbG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,kBADM,gCACe;AACnB;AACE,UAAIC,GAAG,qBAAO,KAAKC,KAAL,CAAWC,WAAX,CAAuBH,kBAA9B,CAAP;;AACAC,MAAAA,GAAG,CAAC,GAAD,CAAH,GAAW,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,UAAlC;AAEA,aAAOH,GAAP;AACH,KAPK;AAQNI,IAAAA,IARM,kBAQC;AACH,UAAIA,IAAI,GAAG,KAAKC,MAAL,CAAYC,QAAvB;AACA,UAAMC,cAAc,GAAG,CAAC,CAAC,KAAKR,kBAAL,CAAwBK,IAAxB,CAAzB;;AAEA,UAAI,CAACG,cAAD,IAAmBH,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAe,CAAf,MAAsB,IAA7C,EAAmD;AAC/CJ,QAAAA,IAAI,GAAG,CAACA,IAAI,CAACK,KAAL,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,YAAnB,EAAiCL,IAAI,CAACK,KAAL,CAAW,CAAX,CAAjC,EAAgDC,IAAhD,CAAqD,EAArD,CAAP,CAD+C,CACkB;AACpE;;AAED,aAAON,IAAP;AACH,KAjBK;AAkBNT,IAAAA,MAlBM,oBAkBG;AACL,aAAO,KAAKI,kBAAL,CAAwB,KAAKK,IAA7B,CAAP;AACH;AApBK;AAZG,CAAf","sourcesContent":["export default {\n    methods: {\n        checkRedirect() {\n            if (this.newUrl) {\n                this.$router.replace(this.newUrl);\n\n                return true;\n            }\n\n            return false;\n        },\n    },\n  computed: {\n      redirectionMapping() {\n        // add default route\n          let map = {...this.$site.themeConfig.redirectionMapping};\n          map['/'] = this.$site.themeConfig.defaultURL;\n\n          return map;\n      },\n      path() {\n          let path = this.$route.fullPath;\n          const isExistingPath = !!this.redirectionMapping[path];\n\n          if (!isExistingPath && path.substr(0, 2) === '/?') {\n              path = [path.slice(0, 1), 'index.html', path.slice(1)].join(''); // insert index.html into path\n          }\n\n          return path;\n      },\n      newUrl() {\n          return this.redirectionMapping[this.path];\n      }\n  }\n}\n"]}]}